#+STARTUP: showall indent hidestars

#+HTML_HEAD: <!-- -*- fill-column: 87 -*- -->
#+HTML_HEAD: <!-- org-toggle-inline-images -->

#+TITLE: Обо мне

#+INFOJS_OPT: view:overview toc:nil

#+NAME:css
#+BEGIN_HTML
<link rel="stylesheet" type="text/css" href="/css/css.css" />
#+END_HTML

Меня зовут Глухов Михаил, я также известен как ~rigidus~. Этот ник
был выбран с целью упростить поиск в поисковых системах.

Я родился в 1982 году в г. Ленинград, теперь - Санкт-Петербург.

Мне можно в любой момент позвонить по телефону ~8(911)286-92-90~
или написать на ~i.am.rigidus at gmail dot com~

Я занимаюсь программированием и исследованиями в смежных
областях и работаю в этой области. В свободное время конструирую
роботов и программирую их.

* Первые шаги

Моим первым языком программирования был JavaScript, когда это еще не
было мейнстримом. Впрочем, нет, первым был все-таки бейсик для
компьютера ~Sinclair48k~. Вот он:

[TODO:gmm] Sinclair48k

Этот компьютер обладал оперативной памятью в 48 килобайт, а жесткого
диска у него вообще не было. Программы грузились с кассетного
магнитофона, который давал сбои из-за того, что холодильник включался
и просаживал напряжение в сети. А иногда даже без этого. Поэтому я
просто набирал программы заново. Это было божественно прекрасно, ведь
недавно у меня вообще не было компьютера и я ходил программировать в
школьный компьютерный кружок, а там было много других желающих.

Вторым моим языком программирования был JavaScript для броузера
~Internet Explorer~ [TODO:gmm] версии. На нем я попытался написать
конечно же вебстраничку. Люди, проклинающие ~Internet Explorer~ 8-ой
версии с тех пор вызывают у меня улыбку.

Возможность сохранять файлы появилась у меня, когда я начал
использовать ~Delphi~. Я был ребенком из малообеспеченной неполной
семьи, да еще и живущим в пригороде, у меня не было денег на покупку
руководства, поэтому я каждый день после учебы ехал полтора часа в Дом
Книги и читал там руководство по ~Delfi~. Когда уже не мог стоять у
стеллажа я отправлялся домой - пробовать полученные знания. Стульев
там не было, но я смог прочитать около четырех тысяч страниц и
подружиться со всем персоналом.

На ~Delphi~ я написал записную книжку - органайзер, которая умела
предупреждать меня о днях рождения друзей и показывала их на
календаре, хранила их телефоны и делала еще много разных вещей. Я
определенно мог гордиться собой!

Пока не повстречался с одним более старшим коллегой. Он разрабатывал
устройства и сообщил мне, что настоящие программисты программируют на
Ассемблере. Я знал, что мне нужно делать - путь мой лежал в Дом
Книги.

Ассемблер был куда сложнее, но отступать было некуда. На одном из
дисков с пиратским софтом мне попались электронные журналы
демомейкеров (интернета пока еще не было). Я смог немного
прикоснусться к демо-сцене, реверсингу и анализу всяческих кряков. Это
было совершенно волшебно. Я писал на ассемблере, си, паскале, делфи,
изучал защиты программ, антиотладочные приемы, и даже не думал, что
все это может быть интересно кому-то еще, кроме меня и загадочных
авторов книг и электронных журналов.

Пожалуй самым высоким достижением на этом пути было написание
собественной операционной системы защищенного режима. Она грузилась с
дискеты, переходила в защищенный режим, имела драйвера мыши и
клавиатуры и набор простых игр но в SVGA-режиме, которые, правда,
никого не впечатляли: "змейка", "арканоид" и несколько упрощенный
"диггер". Все сидели на Windows95 и кое-где начинал появляться
интернет.

* Веб-программирование

Потом вдруг оказалось, что всем нужны сайты и много людей готовы дать
мне денег за то, что я бы делал бесплатно. Мне просто повезло - на
пустом рынке я оказался одним из немногих опытных специалистов, к тому
же веб-программирование на динамических языках было гораздо проще с++
и ассемблера.

Сделав сайт паре фирм я устроился на работу веб-программистом в
веб-студию. Весь код был в ужасном состоянии, так что я просто взял и
переписал их CMS и быстро стал тимлидом. Можно было бы гордиться
собой, но тут я узнал о существовании Лиспа.

* Лисп

Я прочитал эссе Пола Грэма "Побеждая посредственность" и он убедил
меня попробовать Лисп. Я уже считал себя опытным разработчиком,
поэтому чтобы процесс проходил веселее, решил поменять не только язык
программирования но и среду разработки и даже операционную
систему. Так у меня в компе оказался Линукс, в нем Емакс, а в Емаксе -
Лисп. Добро пожаловать обратно в школу - весь предыдущий опыт больше
не работал - я снова не мог написать ни одной программы.

Впрочем, проведя два месяца и отрастив бороду (нет, это тоже не
помогает, не пробуйте) я все-таки начал что-то понимать. Я даже
попытался написать свой собственный лисп для использования в
веб-студии, но этот проект не был оценен по достоинству - у них уже
была написанная мной CMS, которая приносила неплохой доход, и никто не
хотел менять ее на нечто совершенно новое, сырое, и незнакомое. Кроме
меня.

* Лисп в продакшене

Я стал искать компанию, в которой мог бы применить свежеполученные
сверхзнания (mad skillz). И нашел. Это был интернет-магазин,
написанный на PHP и довольно плохо справлявшийся с нагрузкой. Код был
плохим. Впереди был новый год, главная страница временами открывалась
28 секунд и настроение у боссов было скверным. Предыдущий кандидат на
мое место после первого дня работы тихо исчез, не оставив контактов.

Я предложил переписать все на лиспе, а в качестве демонстрации
способностей закешировал самые тяжелые вещи и главная страница стала
открываться за 4 секунды. Быстрее было уже никак, все равно пришлось
бы переписывать все, так почему бы и не на лиспе?

Руководство магазина идею поддержало с оговоркой - деньги за работу
будут заплачены только в том случае, если 90% текущего функционала
будут работать и не тормозить. Но меня уже было не остановить..

* Практическая сторона

Оказалось, что я на самом деле не знал Лисп и что он гораздо
интереснее чем мне представлялось на первый взгляд. В процессе
разработки мне пришлось узнать довольно многое - я читал SICP и PCL
[TODO:gmm] а руководство пользователя Emacs было моей настольной
книгой. Это было очень сложно, но очень интересно.

Через 2 месяца система в общих чертах была готова. Лисп -
компилируемый язык, PHP четвертой версии таким не был - я получил
огромный прирост скорости. Кроме того, PHP был "создан умирать"
[TODO:gmm] и хранил все данные в БД. У меня же большая часть важных
данных кешировалась в памяти процесса. Наконец, благодаря REPL я видел
(и исправлял) ошибки пользователей прямо в момент их
возникновения. Иногда даже до того, как компоненты страницы
окончательно были загружены в броузер пользователя.

Я стал самым могущественным веб-программистом, ведь в моих руках было
секретное оружие, о котором никто не знал - Лисп!
