#+STARTUP: showall indent hidestars

* Установка необходимого
** Установка JDK

Первое, что нужно установить - JDK. Это набор всего необходимого для разработки на
Java, включая основные библиотеки, которые мы будем использовать. Дальше процесс
установки по шагам:
- Скачать Java SE Dev Kit 8 (перед установкой надо принять соглашение, иначе скачать не
  дает). Его мы берем по этой ссылке:
  http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html
  Качайте именно версию 8, более новая версия пока имеет некоторые проблемы с gradle -
  системой сборки проектов (в том числе) на Java, которую мы будем использовать.
- Распаковать и положить в какую-нибудь папку, например ту, что предлагает инсталлятор
  для Windows: ~C:\Program Files\Java\jre1.8.0_151~ или (если вы используете Linux)
  например: ~~/build/jdk1.8.0_151~
- Добавить путь к JDK. В зависимости от используемой вами операционной системы этот
  процесс немного отличается, об этом ниже:

*** Windows

Чтобы все программы, написанные на Java, узнавали где эта Java находится, необходимо
прописать еще одну (в дополнение к тем что уже есть) переменную среды. Переменная
среды - это текстовая переменная операционной системы, хранящая какую-то информацию о
настройках.

Чтобы добавить переменную среды в Windows сделайте следующее:
- зайдите в ~Панель управления~ / ~Система и безопасность~ / ~Система~
- нажмите на ссылку: ~Дополнительные параметры~
- нажмите на кнопку: ~Переменные среды~
- найдите блок ~Системные переменные~
- Добавить в него переменную "~JAVA_HOME~" с путем к вашему установленному JDK как на
  скриншоте ниже:

[[img:java_home.png]]

*** Linux:
**** Распаковать в какую-нибудь папку

Я распаковываю в ~~/build~:

#+BEGIN_SRC sh
  cd ~/build
  tar xvfz jdk-8u151-linux-x64.tar.gz
#+END_SRC

**** Прописать этот путь в ~/.profile:

Обратите внимание, что моя домашнаяя папка - ~~/home/rigidus~, у вас путь скорее всего
отличается.

#+BEGIN_SRC sh
  export JAVA_HOME=/home/rigidus/build/jdk1.8.0_144
  export PATH=$PATH:$JAVA_HOME/bin
#+END_SRC

После этого, чтобы настройки применились, стоит выйти из своего аккаунта и войти снова.

** Установка IntelliJ IDEA

Устанавливаем бесплатную Community версию, которую скачиваем отсюда:
https://www.jetbrains.com/idea/download/

Выбираем черную ссылку ~Download~ и скачиваем установщик.

*** Windows

Запускаем установщик, и в процессе прохождение по этапам выбираем нужные опции:

[[img:idea-win-options.jpg]]

*** Linux

Переносим установщик в выбранную папку и распаковываем его:

#+BEGIN_SRC sh
  mv ~/Downloads/ideaIC-2017.2.5.tar.gz ~/build
  cd ~/build
  tar xvfz ideaIC-2017.2.5.tar.gz
#+END_SRC

Более подробные инструкции по установке приведены в распакованной папке в файле
~Install-Linux-tar.txt~. Теперь можно запустить Idea:

#+BEGIN_SRC sh
  ~/build/idea-IC-172.4343.14/bin/idea.sh
#+END_SRC

** Первый запуск Idea

[[img:idea-first-popup.png]]

При первом запуске Idea обычно спрашивает откуда импортировать установки. Но у нас
никаких установок нет, поэтому просто нажимаем "OK":

Но даже после этого она никак не может успокоиться, и требует принять соглашение,
согласно которому, оплата за все что вы запрограммируете будет принадлежать компании
JetBrains, включая, но не ограничиваясь, и вашу зарплату за те годы, которые вы проведете
прикованным к IntelliJ Idea где-нибудь в Luxsoft или EPAM[fn:1]. Так как такие соглашения все
равно никто не читает, смело нажимайте "Accept", ведь вы еще не настоящий
java-программер.

[[img:idea-second-popup.png]]

К сожалению, даже после этого, Idea продолжает нам досаждать и не дает перейти к
написанию кода:

[[img:idea-third-popup.png]]

Следует немедленно перейти на темную сторону и выбрать тему оформления ~Darkula~,
потому что все остальные темы оформления созданы для того чтобы вызывать меньше
недоумения у вашего босса, когда он проходит мимо и случайно бросает взгляд на ваш
монитор. Впрочем, если вы работаете в офисе, выберите какую-нибудь другую тему, и
ручаюсь, вы проработаете там дольше.

Это еще не конец, будет еще несколько всплывающих окон, созданных, чтобы отбить у вас
желание изучать Java и затруднить обретение могущества, к счастью, их все можно быстро
пройти, нажимая Next->Next->Next

[fn:1] Примечание для юристов: Все торговые марки и названия компаний, упомянутые в
этой шутке принадлежат их правообладателям.

** Создание первого проекта - Hello World

В конце концов, вы должны получить последнее окно, отделяющее вас от вашего первого
проекта:

[[img:idea-final-popup.png]]

Смело нажимаем "Create New Project" и +переходим к коду+, ага, как бы не так! Еще одно
окно:

[[img:idea-start-project-popup.png]]

Ну вы уже знаете что делать, да? Нажимаем Next. Дальше нас ждет что? Правильно, еще
одно окно. Это специальное окно-ловушка, не торопитесь нажимать Next, пока не поставите
галочку ~Create project from template~

[[img:idea-start-template-popup.png]]

Следующее окно милостиво позволяет нам ввести имя проекта, его месторасположение и
базовый пакет. Ну тут уж вы придумайте что-нибудь сами, или просто нажмите Next.

Если Idea не сможет найти JDK, то ей нужно будет явно указать его в ~File~ / ~Project
Structure~. Найдите в левой колонке ~Project Settings~ / ~Project~ и в левой части окна
укажите путь к поставленному JDK:

[[img:idea-path-to-jdk.png]]

И тут мы наконец-то переходим к коду. Чувствуете подвох, да? Конечно, же:

[[img:idea-start-code.png]]

Убираем галочку "Show Tips on Startup" и нажимаем Close. Close, не Next Tip!

Наконец, то мы можем попрограммировать, хотя я понимаю, после такого уже никакого
желания не осталось. Сделаем наш код great again:

#+BEGIN_SRC java
     public class Main {
         public static void main(String[] args) {
             System.out.println("Hello");
         }
     }
#+END_SRC

После чего запустим его, через ~Run~ / ~Run Main~ в главном меню

Убедитесь, что в консоли внизу, которую показывает Idea появилось ваше сообщение "Hello"

[[img:idea-run-hello.png]]

** Скачиваем графическую библиотеку

Для того, чтобы написать игру мы будем использовать набор библиотек ~libgdx~. Он
поставляется в виде установщика, который соберет заготовку проекта. Скачать установщик
можно отсюда: http://libgdx.badlogicgames.com/download.html

После скачивания, запускаем установщик. Если вы используете Linux, возможно потребуется
установить ему разрешение выполняться:

[[img:gdx-setup-rules.png]]

Появится мастер генерации проекта:

[[img:libgdx-generate.png]]

Чтобы поменьше настраивать и сразу перейти к созданию игры мы убираем все галочки,
кроме ~Desktop~ и нажимаем ~Generate~

Генерация проекта скачивает все необходимые библиотеки и генерирует проект в той папке,
в которой указано. Так выглядит успешное окончание процесса:

[[img:libgdx-setup-fin.png]]

** Открываем проект в Idea

Если у вас все еще открыт HelloWold в Idea, выберите в главном меню ~File~ / ~Close
Project~. Вновь появится окно:

[[img:idea-final-popup.png]]

Выбираем второй пункт и Idea откроет нам окно для поиска нашего сгенерированного
проекта. Находим его там, куда его сгенерировал libgdx-setup. Внутри папки, которую мы
должны найти, лежит файл ~build.gradle~ - его и выбираем, перед тем, как нажать "ОК".

Откроется вот такое окно:

[[img:idea-import-separate-check.png]]

Видите там галочку ~Create separate module per source set~? Вот ее и надо
снять. Двигаемся дальше. Idea загружает проект, и как только она с этим закончит, нам
нужно настроить его.

Чтобы настроить проект открываем в главном меню ~Run~ / ~Edit
Configurations~. Откроется окно, в левом верхнем углу которого нужно нажать зеленый
плюс и выбрать там ~Application~

[[img:idea-edit-configurations.png]]


Здесь нужно поменять 4 пункта:
- Name (название файла запускающего приложение) - DeskApp
- MainClass (отсюда стартует код приложения) - указываем DesktopLauncher
- Working Directory (рабочая папка где лежат файлы используемые
  приложением) ./core/assets
- Use classpath or module - выбрать desktop - это папка где лежит DesktopLauncher
- Use (desktop)
- JRE

После всех манипуляций итог должен выглядеть так:

[[img:idea-edit-config-set.png]]

Теперь мы можем запустить проект через главное меню ~Run~ / ~Run DeskApp~ и получить
свое красное окно со злобным смайликом:

[[img:idea-run.png]]

** Модифицируем проект

*** Меняем размеры окна

Чтобы это сделать мы можем немного поправить наш ~DesktopLauncher~

#+BEGIN_SRC java
  LwjglApplicationConfiguration config = new LwjglApplicationConfiguration();
  config.height = 300;
  config.width = 200;
  new LwjglApplication(new MyGdxGame(), config);
#+END_SRC

*** Выводим картинку на экран

и экспериментируем с ее координатами
