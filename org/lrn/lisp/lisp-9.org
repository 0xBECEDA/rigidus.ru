#+STARTUP: showall indent hidestars

* First

closure нужно, чтобы сделать лексическое окружение. Динамическое легко на основе только
ассоциативных списков получается.

book: purely functuonal data structures
book: ершов. введение в теоретическое программирование
google: :one-shot continuation

dynamic environment

Dynamic scope - переменные видны из места вызова функции
Static scop - из места создания функции

CPS преобразование, чтобы не было нехвостовых вызовов, обработка ошибок

block/return catch/trow (block-env catch-env)

tagbody

но это не позволяет создать рекурсивные функции, поэтому делаем labels

-> defunctionalization VM
   - return-from с проверкой что из блока уже вышли (одноразовый выход)
   - unwind-protect

Избавление от рекурсии, делаем вычисления пошаговым
- trampolines - избавление от рекурсии, можно реализовать в форт
- или sec-машина (ad-hoc)

парсер, низкоуровневая арифметика

secd-машина

* Links

Можешь почитать про 3-Lisp — единственная попытка сделать редукционную семантику в
лиспе. Вот ман и реализация:
https://github.com/groupofn/3Lisp.Ruby
3LispManualPrimer.pdf
2 МБ
Но конкретно 3-Lisp — сложная вещь. Я собирался к ней возвращаться, но через некоторое
время.

еще такой вопрос - а как мы можем перейти от интерпретатора к компиляции?
 Роман
Роман 23:19
В этой теме я не разбираюсь. Вроде слышал, что книга "Compiling with continuations"
 Andrew Appel хороша в этом вопросе.

#+BEGIN_SRC lisp
  def apply =
  ((eq o [1#,~+]) -> ((/ +) o 2#);
    ((eq o [1#,~*]) -> ((/ *) o 2#);
      ((eq o [1#,~car]) -> (1# o 1# o 2#);
        ((eq o [1#,~cdr]) -> (tl o 1# o 2#);
          ((eq o [1#,~cons]) -> (appenl o [#1, #2] o #2);
           (~error))))))

  def apply =
  ((eq o [1#,~+]) -> ((/ +) o 2#);
   ((eq o [1#,~*]) -> ((/ *) o 2#);
    ((eq o [1#,~car]) -> (1# o 1# o 2#);
     ((eq o [1#,~cdr]) -> (tl o 1# o 2#);
      ((eq o [1#,~cons]) -> (appenl o [#1, #2] o #2);
       (~error))))))
#+END_SRC

http://www.staff.science.uu.nl/~leeuw112/
https://en.wikipedia.org/wiki/T_(programming_language)
https://common-lisp.net/project/mcclim/
http://axisofeval.blogspot.ru/2011/04/whats-condition-system-and-why-do-you.html
http://lib.uni-dubna.ru/search/files/inf_henderson_func_prog/ch_1-2.pdf
http://www.pgc.com/pgc/home-stuff/papers-full/computing-w-tg-forms-abstract.html
http://www.keldysh.ru/pages/mrbur-web/misc/pospelov/orchestra.htm
http://home.pipeline.com/~hbaker1/LinearLisp.html
https://www.european-lisp-symposium.org/2017/index.html
http://it2014.tk/
http://www.forth.org.ru/~cactus/library.htm
http://www.hardline.ru/1/12/356/
http://sam-falvo.github.io/
https://groups.csail.mit.edu/mac/ftpdir/scheme-mail/HTML/rrrs-1988/msg00134.html
http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.133.1426&rep=rep1&type=pdf
https://github.com/groupofn/3Lisp.Ruby
https://www.forbes.com/sites/parmyolson/2016/02/23/chat-bots-facebook-telegram-wechat/#5218a6f2068e
http://blog.close.io/follow-up
https://lwn.net/Articles/741878/
http://cpsc.yale.edu/sites/default/files/files/tr445.pdf
https://picolisp.com/wiki/?needforspeed
https://www.cs.cornell.edu/~ross/publications/mixedsite/mixedsite-tate-fool13.pdf
tco-forth
http://kazimirmajorinc.com/
http://www.nhplace.com/kent/PFAQ/unwind-protect-vs-continuations-original.html
http://ml.cddddr.org/scheme/msg00201.html
https://www.thocp.net/biographies/papers/backus_turingaward_lecture.pdf
https://docs.racket-lang.org/teachpack/2htdpuniverse.html
http://www.loper-os.org/
https://en.wikipedia.org/wiki/Tacit_programming
http://www.kevinalbrecht.com/code/joy-mirror/j07rrs.html
http://wiki.c2.com/?SuperCombinators
https://docs.racket-lang.org/redex/
https://web.archive.org/web/20131011125002/http://www-formal.stanford.edu/jmc/
https://web.archive.org/web/20061029131004/http://www8.informatik.uni-erlangen.de/html/lisp/mcc91.html
http://www.nhplace.com/kent/Papers/cl-untold-story.html
http://www.softwarepreservation.org/projects/LISP
http://www.little-lisper.org/website/pc/index.html
http://www.european-lisp-workshop.org/archives/2004/submissions/Burger.pdf
https://www.google.ru/search?q=McCarthy%2C+J.+1960.+%22Recursive+functions+of+symbolic+expressions+and+their+computation+by+machine%22&oq=McCarthy%2C+J.+1960.+%22Recursive+functions+of+symbolic+expressions+and+their+computation+by+machine%22&aqs=chrome..69i57&sourceid=chrome&ie=UTF-8
http://www-formal.stanford.edu/jmc/recursive/recursive.html
https://vk.com/wall-31969346_1880544
https://vk.com/wall-68995594_145045
http://wiki.c2.com/?ClosuresAndObjectsAreEquivalent
https://en.wikipedia.org/wiki/Oaklisp
file:///home/rigidus/%D0%97%D0%B0%D0%B3%D1%80%D1%83%D0%B7%D0%BA%D0%B8/tman.pdf
https://en.wikipedia.org/wiki/A-normal_form
https://www.google.ru/search?q=A-normal+form&oq=A-normal+form&aqs=chrome..69i57j69i61j69i60l2&sourceid=chrome&ie=UTF-8
http://matt.might.net/articles/a-normalization/
https://en.wikipedia.org/wiki/Semipredicate_problem
http://wiki.c2.com/?DynamicClosure
https://proglib.io/p/write-a-kernel/
http://people.cs.uchicago.edu/~blume/classes/aut2008/proglang/papers/definterp.pdf
https://github.com/reklatsmasters/webassembly-examples
https://github.com/AssemblyScript/assemblyscript
https://www.lektorium.tv/speaker/3615
https://www.google.ru/search?q=A+Lisp+through+the+Looking+Glass&oq=A+Lisp+through+the+Looking+Glass&aqs=chrome..69i57j69i64l2&sourceid=chrome&ie=UTF-8
http://web.cs.wpi.edu/~jshutt/kernel.html
http://www.nhplace.com/kent/Papers/Special-Forms.html
http://ilammy.github.io/lisp/
http://ilammy.github.io/lisp/ch01_basics.html
https://eager.io/blog/the-languages-which-almost-were-css/
http://www.cs.utexas.edu/users/moore/acl2/manuals/current/manual/index-seo.php/COMMON-LISP____OR
https://franz.com/lab/
https://www.google.ru/search?q=%D0%BB%D0%B0%D0%BD%D0%B4%D0%B8%D0%BD+%D1%8F%D0%B7%D1%8B%D0%BA%D0%BE%D0%B2+%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F&oq=%D0%BB%D0%B0%D0%BD%D0%B4%D0%B8%D0%BD+%D1%8F%D0%B7%D1%8B%D0%BA%D0%BE%D0%B2+%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F&aqs=chrome..69i57.8818j0j7&sourceid=chrome&ie=UTF-8
https://ru.wikipedia.org/wiki/%D0%A5%D1%80%D0%BE%D0%BD%D0%BE%D0%BB%D0%BE%D0%B3%D0%B8%D1%8F_%D1%8F%D0%B7%D1%8B%D0%BA%D0%BE%D0%B2_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F
http://www.math.bas.bg/bantchev/place/iswim/next700.pdf
https://www.google.ru/search?q=%D0%BF%D1%80%D0%BE%D0%B1%D0%BB%D0%B5%D0%BC%D0%B0+%D1%84%D1%83%D0%BD%D0%B0%D1%80%D0%B3%D0%B0&oq=%D0%BF%D1%80%D0%BE%D0%B1%D0%BB%D0%B5%D0%BC%D0%B0+%D1%84%D1%83%D0%BD%D0%B0%D1%80%D0%B3%D0%B0&aqs=chrome..69i57.4951j0j7&sourceid=chrome&ie=UTF-8
https://github.com/George66/Textbook
http://13-49-ru.blogspot.ru/search?q=lisp
https://www.slideshare.net/alexandrgranin/back-to-the-future-41252741
https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B4%D0%BE%D0%BB%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5_(%D0%B8%D0%BD%D1%84%D0%BE%D1%80%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0)
https://ru.wikipedia.org/wiki/%D0%9A%D0%BE%D0%BC%D0%B1%D0%B8%D0%BD%D0%B0%D1%82%D0%BE%D1%80%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5#%D0%9D%D0%B5%D1%8F%D0%B2%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F_%D0%B2_J_%D0%B8_K
https://metadeus.wordpress.com/tag/forth/
https://habrahabr.ru/post/131518/
https://habrahabr.ru/post/347002/
https://metadeus.wordpress.com/2012/02/28/%D0%B7%D0%B0%D1%87%D0%B5%D0%BC-%D0%BD%D1%83%D0%B6%D0%B5%D0%BD-%D1%81%D1%84%D0%B5%D1%80%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9-lisp-%D0%B5%D1%81%D0%BB%D0%B8-%D0%B5%D1%81%D1%82%D1%8C-%D1%81/
http://naufsb.ru/technocracy/t40_absolute_functional_purity/
https://www.google.ru/search?q=%D1%81%D1%82%D0%B8%D0%BB%D1%8C+%D0%BF%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B8+%D0%BF%D1%80%D0%BE%D0%B4%D0%BE%D0%BB%D0%B6%D0%B5%D0%BD%D0%B8%D0%B9&oq=%D1%81%D1%82%D0%B8%D0%BB%D1%8C+%D0%BF%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B8+%D0%BF%D1%80%D0%BE%D0%B4%D0%BE%D0%BB%D0%B6%D0%B5%D0%BD%D0%B8%D0%B9&aqs=chrome..69i57.5659j0j7&sourceid=chrome&ie=UTF-8
https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B4%D0%BE%D0%BB%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5_(%D0%B8%D0%BD%D1%84%D0%BE%D1%80%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0)#%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5_%D0%B2_%D1%81%D1%82%D0%B8%D0%BB%D0%B5_%D0%BF%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B8_%D0%BF%D1%80%D0%BE%D0%B4%D0%BE%D0%BB%D0%B6%D0%B5%D0%BD%D0%B8%D0%B9
