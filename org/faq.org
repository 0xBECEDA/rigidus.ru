
-*- mode: org; fill-column: 95 -*- @title Faq


* Лисповый бинарник

Доброго времени суток.

После твоей рекламы LISPа задумываюсь о переходе на него, соответственно очередная бессонная
ночь...  Хотел попросить об ответе на важный для меня вопрос:

Для реализации прораммы (в смысле её дальнейшего использования кем нибудь на другом компьютере)
я привык видеть бинарный исполняемый файл. При разработке используется SLIME есть ли
возможность на Common Lisp сделать локальный образ такой среды для запуска на другой машине или
необходимо так же её устанавливать.

Просто если например сравнивать с Фортом то там исполняемая среда весит совсем мало и её можно
спокойно включать в дистрибутив, привязывать необходимые библиотеки для GUI и т.д.

Есть ли такая возможность для Common Lisp?  (Может весьма глупо звучит, но в моём настольном
пособии я этого не нашёл...)

-------------------

Такая возможность есть, но тебе не нужно этого хотеть.  По следующим причинам:

Во-первых, приложения теперь распространяются не как вещь в себе, а по клиент-серверной модели
(MSFT называет это SaaS), потому что так проще:

- меньше геморроя с обновлениями,
- можно отозвать лицензию в любой момент - это для платных актуально,
- да и хакерам бинарник давать - только дразнить.
- Кроме того, пользователи любят сервис внутри своих известных программ, а к сторонним
  бинарникам относятся подозрительно.
- И наконец, все что работает внутри броузера (вебстраницы, плагины) по настоящему
  кроссплатфоренно и будет работать и на маке и под виндой и в любом линухе.

Поэтому пользовательские приложения переезжают в броузер и вероятно скоро там и остануться, в
большинстве своем - см. HTML5 - он как раз на это нацелен - чтобы с пользовательским
приложением в броузере можно было работать и без подключения к сети.

Во-вторых, в современной ситуации размер бинарника не имееет значения, если ты не
embedded-программист или не пишешь вирусы и трояны. Количество библиотек дейтвительно имеет
значение, но у Common Lisp с этим все достаточно хорошо.

И в третьих, основные преимущества Common Lisp заключаются в возможности взаимодействовать с
программой через REPL прямо на лету, а для этого практичнее распространять не бинарник, а
исходный код вместе с используемой реализцией и библиотеками. Кажется, что бинарник проще, но
на самом деле - это просто архив, содержащий все необходимое - распаковал и пользуйся - у меня
на флешке есть такой архив на случай, если я окажусь за компьютером без подключения к сети.

Если же интернет есть - исходник можно слить с <a
href="http://github.com">http://github.com</a> (у тебя же уже есть там аккаунт? :) библиотеки с
<a href="http://quicklisp.org">http://quicklisp.org</a> и больше ничего не надо. Но я делаю еще проще,
подключаясь по ssh или vnc к своей машине и работая на ней удаленно. Это еще и
кроссплатформенно и я получаю все преимущества настроенной под себя среды - emacs например.

Если же я тебя не убедил, то ты можешь использовать save-lisp-and-die чтобы сохранить в
бинарник текущее состояние sbcl. Есть также некоторые утилиты, которые умеют перетряхивать
образ с целью уменьшения его размера, но у меня никогда не возникало необходимости в них.
