#+STARTUP: showall indent hidestars
#+TOC: headlines 3

#+TITLE: Изучи программирование за 21 год

* Интро

Этот курс задуман как несколько более фундаментальный, чем обычно предлагаемые курсы,
так что у него даже есть неофициальное название "Изучи программирование за 21 год".

Материалы и план курса сформированы но уточняются и дополняются. Ожидается, что курс
будет рассматривать все вопросы программирования от архитектуры низкоуровневых средств
до абстракций лямбда-исчисления.

* Прикосновение к магии
** Hello World
** Транслятор кода Морзе
Первая осмысленная программа в процедурном стиле.
** HTML и CSS
Декларативные языки разметки
* Создание игры на Java

Этот интенсив рассчитан на 3-5 дней. За это время мы создаем простую игру [[https://ru.wikipedia.org/wiki/Breakout_(%D0%B8%D0%B3%D1%80%D0%B0)][Breakout]]
([[https://ru.wikipedia.org/wiki/Arkanoid][Arkanoid]]) с использованием ~JavaSE~ и графической библиотеки ~libGDX~.

Геймплей: Игрок контролирует небольшую платформу-ракетку, которую можно передвигать
горизонтально от одной стенки до другой, подставляя её под шарик, предотвращая его
падение вниз. Удар шарика по кирпичу приводит к разрушению кирпича.

- [[file:../lrn/java/setup.org][Установка всего необходимого]]
- [[file:../lrn/java/gameclass.org][Анализируем MyGdxGame]]
- [[file:../lrn/java/control.org][Управление и физика]]
- [[file:../lrn/java/bricks.org][Разбиваемые элементы]]
- [[file:../lrn/java/platform.org][Платформа]]

* Низкоуровневое программирование
** Стек и вызов процедур
** Указатели
** Взамодействие с операционной системой
- [[file:../lrn/asm/cmd.org][Анализ ассемблирования и сборки Linux-программы]]
** Ввод-вывод
** Обработка прерываний
** Оверлеи
** Разделяемые библиотеки
** Компоновка
** Системы сборки
** Зависимости
* Обратная инженерия
- https://vk.com/wall-54530371_157122
- https://vk.com/wall-54530371_156890
** Дизассемблирование
- [[file:../lrn/asm/strip.org][Ищем main без отладочных символов]]
** Инструментирование кода
** Перехват вызовов
** Инструменты анализа систем

* Типизация
** Сильная/слабая
** Строгая/нестрогая
** Вывод типов
* Императивные парадигмы
** Процедурная
** модульная
** объектно-ориентированная
* Механизмы абстракции
** Кольцевой буфер
** Потоки
** Очереди сообщений
** Машины состояний
** Модель взаимодействующих акторов
** Сигналы
* Функциональное программирование
** Код как данные
** Рекурсия
** Функции высшего порядка
** Чистота
** Ленивость.
** Реактивность
- https://habrahabr.ru/company/infopulse/blog/338910/
* Рантайм
** Менеджер памяти и умные указатели
** Сборка мусора
** Зеленые потоки
** Супервайзинг
* Логическое программирование
* Пролог
* Рефал
* Forth
* Визуальное программирование
** Дракон
* Написание языков и виртуальных машин
** Создание компилятора
** Написание среды времени выполнения
* Распределенные системы
** Топология сетей
- https://habrahabr.ru/post/340626/
* Самообучающиеся системы
** Линейная регрессия
** Кластеризация
** Деревья решений
** Нейронные сети и их обучение
- https://geektimes.ru/post/84015/
- https://habrahabr.ru/post/312450/
- https://proglib.io/p/neural-nets-guide/
- https://proglib.io/p/intro-to-deep-learning/
- https://habrahabr.ru/company/neurodatalab/blog/336218/
** Динамическое программирование
** Генетическое программирование
